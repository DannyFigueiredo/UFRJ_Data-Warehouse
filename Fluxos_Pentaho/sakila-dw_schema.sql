-- Schema Sakila Dw
-- Dimens√µes: Filme, Loja, Cliente, Data, Funcionario, linguagem
drop schema if exists dw_sakila;
create schema dw_sakila;
use dw_sakila;
show tables;

create table Date(
	DATA_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    DATE DATE,
    DAY INT,
    MONTH INT,
    YEAR INT,
    QUARTER INT,
    DAY_OF_WEEK VARCHAR(255),
    WEEKEND BOOLEAN,
    PRIMARY KEY(DATA_ID)
);

CREATE TABLE FILM(
	FILM_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(255),
    REPLACEMENT_COST DOUBLE,
    RATING VARCHAR(10),
    RENTAL_RATE DOUBLE,
	RELEASE_YEAR varchar(10),
    RENTAL_DURATION INT,
    PRIMARY KEY(FILM_ID)
);

CREATE TABLE CUSTUMER(
	CUSTUMER_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    FULL_NAME varchar(400),
    EMAIL VARCHAR(255),
    ADDRESS VARCHAR(255),
    ADDRESS2 VARCHAR(255),
    DISTRICT VARCHAR(255),
    CITY VARCHAR(255),
    POSTAL_CODE VARCHAR(10), 
    STATUS_ACTIVE INT,
    PRIMARY KEY(CUSTUMER_ID)
);

CREATE TABLE STAFF(
	STAFF_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    FULL_NAME varchar(255),
    MANAGER BOOLEAN,
    PRIMARY KEY(STAFF_ID)
);

CREATE TABLE STORE (
	STORE_ID  SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    ADRESS VARCHAR(255),
    ADDRES2 VARCHAR(255),
    DISTRICT VARCHAR(255),
    CITY VARCHAR(255),
    POSTAL_CODE VARCHAR(10),
    PRIMARY KEY (STORE_ID)
);

CREATE TABLE LANGUAGE(
	LANGUAGE_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    LANGUAGE VARCHAR(255),
    PRIMARY KEY (LANGUAGE_ID)
);

CREATE TABLE RENTAL(
	RENTAL_ID SMALLINT UNSIGNED NOT NULL,
	RENTAL_DATE SMALLINT UNSIGNED NOT NULL,
    RETURN_DATE SMALLINT UNSIGNED NOT NULL,
    PAYMENT_DATE SMALLINT UNSIGNED NOT NULL,
    STAFF_ID SMALLINT UNSIGNED NOT NULL,
    CUSTUMER_ID SMALLINT UNSIGNED NOT NULL,
    FILM_ID SMALLINT UNSIGNED NOT NULL,
    STORE_ID SMALLINT UNSIGNED NOT NULL,
    LANGUAGE_ID SMALLINT UNSIGNED NOT NULL,
    PRICE FLOAT,
    RENT_DAYS INT,
    PRIMARY KEY (RENTAL_ID),
    CONSTRAINT FK_RENTAL_DATE FOREIGN KEY (RENTAL_DATE) REFERENCES Date (DATA_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_RETURN_DATE FOREIGN KEY (RETURN_DATE) REFERENCES Date (DATA_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_PAYMENT_DATE FOREIGN KEY (PAYMENT_DATE) REFERENCES Date (DATA_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT FK_STAFF_ID FOREIGN KEY (STAFF_ID) REFERENCES STAFF (STAFF_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTUMER_ID FOREIGN KEY (CUSTUMER_ID) REFERENCES CUSTUMER (CUSTUMER_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILM (FILM_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_STORE_ID FOREIGN KEY (STORE_ID) REFERENCES STORE (STORE_ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LANGUAGE_ID FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (LANGUAGE_ID) ON DELETE RESTRICT ON UPDATE CASCADE
);